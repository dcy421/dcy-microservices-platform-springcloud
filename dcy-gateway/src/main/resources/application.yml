spring:
  redis:
    host: ${REDIS_HOST:192.168.136.170}
    port: ${REDIS_PORT:6379}
  cloud:
    sentinel:
      transport:
        dashboard: localhost:8555
      eager: true
    gateway:
      discovery:
        locator:
          enabled: true
      default-filters:
      - name: RequestRateLimiter
        args:
          redis-rate-limiter.replenishRate: 10  #令牌桶每秒填充平均速率
          redis-rate-limiter.burstCapacity: 20  #令牌桶总容量
          rate-limiter: "#{@defaultRedisRateLimiter}"  #SPEL表达式去的对应的bean
          key-resolver: "#{@ipAddressKeyResolver}" #SPEL表达式去的对应的bean
      routes:
        - id: auth-center
          uri: lb://auth-center
          predicates:
            - Path=/auth-center/**
          filters:
            - GwSwaggerHeaderFilter
            - StripPrefix=1
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/defaultfallback'
        - id: admin-center
          uri: lb://admin-center
          predicates:
            - Path=/admin-center/**
          filters:
            - GwSwaggerHeaderFilter
            - StripPrefix=1
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/defaultfallback'
        - id: file-center
          uri: lb://file-center
          predicates:
            - Path=/file-center/**
          filters:
            - GwSwaggerHeaderFilter
            - StripPrefix=1
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/defaultfallback'
        - id: workflow-center
          uri: lb://workflow-center
          predicates:
            - Path=/workflow-center/**
          filters:
            - GwSwaggerHeaderFilter
            - StripPrefix=1
            - name: Hystrix
              args:
                name: default
                fallbackUri: 'forward:/defaultfallback'

dcy:
  gateway:
    dynamic-route:
      enabled: true
      data-type: nacos

feign:
  sentinel:
    enabled: true

#设置最大超时时间
ribbon:
  eager-load:
    enabled: true
  ServerListRefreshInterval: 10  #刷新服务列表源的间隔时间
  httpclient:
    enabled: false
  okhttp:
    enabled: true
  ReadTimeout: 90000
  ConnectTimeout: 90000
  OkToRetryOnAllOperations: true #对所有操作请求都进行重试
  MaxAutoRetries: 1 #对当前实例的重试次数
  MaxAutoRetriesNextServer: 1 #切换服务器实例的重试次数

#设置最大容错超时时间
hystrix:
  threadpool:
    default:
      coreSize: 100
      maximumSize: 5000
      allowMaximumSizeToDivergeFromCoreSize: true
      maxQueueSize: -1
  command:
    default:
      circuitBreaker:
        foreOpen: false
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 90000

ignored: |
  /**/actuator/** , /**/actuator/**/** ,
  /v2/api-docs/**, /swagger-ui.html, /swagger-resources/**, /webjars/** ,
  /**/v2/api-docs/**, /**/swagger-ui.html, /**/swagger-resources/**, /**/webjars/**,
  /**/druid/**, /**/favicon.ico, /**/prometheus,
  /auth-center/oauth/**,/auth-center/getUserInfo,/auth-center/getOAuthDetails,
  /admin-center/dict/getDictListByType,/admin-center/dict/getDictTreeListByGroupType,
  /file-center/file/**,
  /workflow-center/**

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS